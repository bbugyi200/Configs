# ----------------------------------- ALIASES --------------------------------
alias sql="rlwrap sqlite3"
alias mutt-edu="mutt -e 'source ~/.mutt/hooks/bmb181@scarletmail.rutgers'"
alias mutt-root='sudo mutt -f /var/spool/mail/root'
alias lls="ls -alF"
alias lvim='vim -c "normal \`0" -c "bdelete 1"'
alias cower='cower -c'
alias ccat='pygmentize -g'
alias time='/usr/bin/time'
alias soglob='source ~/Dropbox/dotfiles/extras/globrc'
alias vihor='vim ~/Dropbox/notes/Horizons_of_Focus/*'
alias rst='killall panel-init && panel-init'
alias ssh-athena='ssh -p 34857 bryan@173.71.68.88'
alias ssh-aphrodite='ssh -p 34588 bryan@aphrodite'
alias rm="rm -i"
alias mv="mv -i"
alias cp="cp -i"

# -------------------------------- FUNCTIONS ---------------------------------

# ~~~~~ transmission-remote functions ~~~~~
tsm() { transmission-remote -l }
tsm-start() { transmission-daemon }
tsm-stop() { killall -9 transmission-daemon }
tsm-watch() { watch -n 1 transmission-remote -l }
tsm-add() { transmission-remote -a $1 }
tsm-boost() { transmission-remote -t$1 -Bh -phall -pr250 }
tsm-rm() { transmission-remote -t$1 -r }
tsm-purge() { transmission-remote -t$1 -rad }

# ~~~~~ TMUX FUNCTIONS ~~~~~
# Initialize different tmux environments
typeset -A default_dirs
default_dirs[tsm]="~"
default_dirs[panel]="/home/bryan/Dropbox/scripts/C/src/panel"
default_dirs[APUE]="/home/bryan/Dropbox/My_Studies/C/APUE"
tm () { 
	if [[ "$1" == "ls" ]]; then
		tmux ls
		return 0
	fi

	SESS="$1"; shift
	tmux new -s "$SESS" -c "${default_dirs[$SESS]}" -d
	tmux switchc -t "$SESS"
	if [ -f "/home/bryan/Dropbox/scripts/tmux-envs/pre/$SESS.sh" ]; then
		"/home/bryan/Dropbox/scripts/tmux-envs/pre/$SESS.sh" "$@"
	fi
}

# Kill current tmux session and attach to next session
tm-kill () {
	SESS=$(tmux display-message -p "#S")
	tmux switchc -n
	if [ -f "/home/bryan/Dropbox/scripts/tmux-envs/post/$SESS.sh" ]; then
		"/home/bryan/Dropbox/scripts/tmux-envs/post/$SESS.sh" 
	else
		tmux kill-session -t "$SESS"
	fi
}

# ~~~~~ MISCELLANEOUS ~~~~~
# Prints the value of a variable
pvar () { set | grep -i -e "^$1" }

wim() { vim $(where $1) }

mkcd() { mkdir -p $1 && cd $1 }

function ccd {
    case "$1" in
        dots|df)
            cd /home/bryan/Dropbox/dotfiles;;
        notes)
            cd ~/Dropbox/notes;;
        videos)
            cd /media/bryan/hercules/media/Entertainment/Videos;;
        misc)
            cd /media/bryan/hercules/media/Misc;;
        bin|scripts)
            cd /home/bryan/Dropbox/scripts;;
        horizons)
            cd /home/bryan/Dropbox/notes/Horizons_of_Focus;;
        learn)
            cd /home/bryan/Dropbox/Learning_Environments;;
        *)
            return 1
    esac
}

function sbreak() {
    FILE=~/Dropbox/notes/sbreak.txt
    if [ "$1" = '--clear' -o "$1" = '-c' ]; then 
        sed -i 's/\[X\]/\[\]/g' $FILE
        sed -i '/([X]\?)/d' $FILE
    fi

    if [ "$2" = '--silent' -o "$2" = '-s' ]; then
        : # NOOP
    else
        vim $FILE
    fi
}


function getPWD() {
    echo $(pwd | sed 's/\/home\/[Bb]ryan/~/' | cut -c -55) 
}

# Enables vim :Man command from the terminal
vman() {
	vim -c "SuperMan $*"

	if [ "$?" != "0" ]; then
		echo "No manual entry for $*"
	fi
}

# ~~~~~ ETERNAL BASH HISTORY ~~~~~
# https://spin.atomicobject.com/2016/05/28/log-bash-history/
LOGFILE="/home/bryan/Dropbox/logs/$(hostname)-cmd-history.log"
function log_bash_history() { 
    if [ "$(id -u)" -ne 0 ]; 
    then printf "%-20s%-25s%-60s%s\n" "$(hostname)" "$(date '+%Y-%m-%d.%H:%M:%S')" "$(getPWD)" "$(fc -ln -1)" >> $LOGFILE;
    fi; 
}

function hgrep() {
    if [ "$1" = '--local' -o "$1" = '-l' ]
    then
        cat $LOGFILE | nl -s ' ' | grep -a -e " $(getPWD) " | grep -a -e "$(hostname)" | tr -s ' '| cut -d' ' -f 2,6- | grep -a -e "$2"
    elif [ "$1" = '--verbose' -o "$1" = '-v' ]
    then
        cat ~/Dropbox/logs/athena-cmd-history.log ~/Dropbox/logs/aphrodite-cmd-history.log | nl | grep -a -e "$2"
    else
        cat $LOGFILE | nl -s ' ' | grep -a -e "$(hostname)" | tr -s ' ' | cut -d' ' -f 2,6- | grep -a -e "$1"
    fi
}

function hview() {
    if [ $# -eq 0 ]
    then 
        vim $LOGFILE
    else
        vim +$1 $LOGFILE
    fi
}

# ------------------------------ EXPORTS -------------------------------------
# I set this so the crontab would use vim for editing
export EDITOR=$(which vim)

export PROMPT_COMMAND="log_bash_history" 
# Removed to fix double history log # ; $PROMPT_COMMAND"

# ------------------------------ MISC ----------------------------------------
#so as not to be disturbed by Ctrl-S ctrl-Q in terminals:
stty -ixon

# Fixes Mutt Background Issue (stays transparent) in TMUX
export TERM="screen-256color"
