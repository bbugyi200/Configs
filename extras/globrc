# ------------------------------------------------------------------------------
# ------------------------- FUNCTIONS + ALIASES --------------------------------
# ----- Vim
alias vihor='vim ~/Dropbox/notes/Horizons_of_Focus/*'
alias onething='vim -c "/$(date --date="yesterday" +%m\\/%d\\/%Y)" ~/Dropbox/notes/Onething/{body.txt,mind.txt,heart.txt}'
alias sch='vim ~/Dropbox/notes/Rutgers/course_schedule.txt ~/Dropbox/notes/project_schedule.txt'
alias vip="vim -c 'execute \"normal \\<c-p>\"'"
alias lim='vim -c "normal \`0" -c "bdelete 1"'
wim() { vim $(find ~/Dropbox/scripts -type f -name $1); }

mim() {
    if [[ -z "$1" ]]; then
        echo "usage: mim <mark>"
        return 1
    fi
    if [[ "/bin/zsh" == $SHELL ]]; then
        MARK=${1:u}
    elif [[ "/bin/bash" == $SHELL ]]; then
        MARK=${1^^}
    fi
    vim -c "normal \`$MARK" -c "bdelete 1"
}

# Enables vim :Man command from the terminal
vman() {
	vim -c "SuperMan $*"

	if [ "$?" != "0" ]; then
		echo "No manual entry for $*"
	fi
}


# ----- SSH / FTP
alias ssh-athena="ssh -p $ATHENAS_SSH_PORT bryan@$ATHENAS_DDNS_HOSTNAME"
alias ssh-aphrodite='ssh -p 34588 bryan@aphrodite'
alias ssh-rutgers='ssh bmb181@less.cs.rutgers.edu'
alias sftp-rutgers='sftp bmb181@less.cs.rutgers.edu'
alias sftp-athena="sftp -P $ATHENAS_SSH_PORT bryan@$ATHENAS_DDNS_HOSTNAME"


# ----- Java
alias Java='java -classpath .:../bin'
alias Javac='javac -d ../bin'
alias Jdb='jdb -classpath "../bin"'


# ----- Git
alias gnum="git log --oneline --color=always | nl -s ':  ' -v 0 | less"
alias ggrep='git rev-list --all | xargs git grep -n --break --heading'
alias gpf='git push -f'
alias ghooks='rm -rf .git/hooks && git init' 
gcB() { git checkout -b $1 && git push --set-upstream origin $1; }

gff() {
    if [[ $(git symbolic-ref --short HEAD) != "master" ]]; then
        git checkout master
    fi
    git pull --rebase && git merge --ff-only $1 && confirm "git branch -D $1 && git push --delete origin $1"
}

unalias gco  # Defined in Oh-My-Zsh's Git plugin
gco() {
    if [[ -n "$1" ]]; then
        git checkout "$@"
    else
        git checkout @{-1}  # Last Branch (aka 'git checkout -')
    fi
}


# ----- Overriden Commands
alias ccat='pygmentize -g'
alias cower='cower -c'
alias matlab='matlab -nojvm -nodisplay -nosplash'
alias time='/usr/bin/time'
alias tree='clear && tree -I "venv*|__pycache__*|coverage*"'
alias sudo='sudo '  # makes aliases visible to sudo

# Remove/Overwrite Files Safely
alias rm="rm -i"
alias mv="mv -i"
alias cp="cp -i"


# ----- transmission-remote
tsm() { transmission-remote -l; }
tsm-start() { transmission-daemon; }
tsm-stop() { killall -9 transmission-daemon; }
tsm-watch() { watch -n 1 transmission-remote -l; }
tsm-add() { transmission-remote -a $1; }
tsm-boost() { transmission-remote -t$1 -Bh -phall -pr250; }
tsm-rm() { transmission-remote -t$1 -r; }
tsm-purge() { transmission-remote -t$1 -rad; }

rip() { nohup torrent "$@" &> /dev/null & disown }


# ----- ETERNAL BASH HISTORY
# https://spin.atomicobject.com/2016/05/28/log-bash-history/
LOGFILE="/home/bryan/Dropbox/logs/$(hostname)-cmd-history.log"
log_bash_history() { 
    if [ "$(id -u)" -ne 0 ]; then
        printf "%-20s%-25s%-60s%s\n" "$(hostname)" "$(date '+%Y-%m-%d.%H:%M:%S')" "$(pwd | sed 's/\/home\/[Bb]ryan/~/' | cut -c -55)" "$(fc -ln -1)" >> $LOGFILE;
    fi; 
}

hgrep() {
    if [ "$1" = '--local' -o "$1" = '-l' ]
    then
        cat $LOGFILE | nl -s ' ' | grep -a -e " $(getPWD) " | grep -a -e "$(hostname)" | tr -s ' '| cut -d' ' -f 2,6- | grep -a -e "$2"
    elif [ "$1" = '--verbose' -o "$1" = '-v' ]
    then
        cat ~/Dropbox/logs/athena-cmd-history.log ~/Dropbox/logs/aphrodite-cmd-history.log | nl | grep -a -e "$2"
    else
        cat $LOGFILE | nl -s ' ' | grep -a -e "$(hostname)" | tr -s ' ' | cut -d' ' -f 2,6- | grep -a -e "$1"
    fi
}

hview() {
    if [ $# -eq 0 ]
    then 
        vim $LOGFILE
    else
        vim +$1 $LOGFILE
    fi
}


# ----- LangDoc
alias PyDoc='LangDoc -e py -m'
alias JavaDoc='LangDoc -e java -m'
alias CDoc='LangDoc -e c -m'
alias Doc='LangDoc -e sh -m'


# ----- Package Management
alias update='confirm "sudo pacman -Syu"; confirm "mkdir /tmp/builds && cd /tmp/builds && cower -vud && buildall"'
alias del='sudo pacman -Rs'
alias mkpkg='makepkg -si'


get() {
    if pacman -Ss "^$1\$" &> /dev/null; then
        sudo pacman -S $1
    else
        echo "Package not found in official repositories!"
        if cower -s "^$1\$" &> /dev/null; then
            mkcd /tmp/builds
            cower -d $1
            tmux send-keys "cd $1 && tree" "Enter"
        else
            echo "Package not found in AUR!"
            return 1
        fi
    fi
}


# ----- MISCELLANEOUS
alias mutt="neomutt"
alias mutt-gmail="neomutt -e 'source ~/.mutt/hooks/bryanbugyi34.gmail'"
alias mutt-root='sudo neomutt -f /var/spool/mail/root'
alias lls="ls -alF"
alias so='source ~/Dropbox/dotfiles/.zshrc'
alias mirror='xrandr --output DVI-I-1-1 --auto --same-as LVDS1'
alias nomirror='xrandr --output DVI-I-1-1 --auto --right-of LVDS1'
alias delshots='confirm "find /home/bryan/Dropbox/logs/aphrodite-motion -name \"*$(date +%Y%m%d)*\" -delete"'
alias snapshots='find /home/bryan/Dropbox/logs/aphrodite-motion -name "*$(date +%Y%m%d)*" | sort | xargs imv && delshots'
alias rstwifi='sudo systemctl restart netctl-auto@wlo1.service'
alias la="LocalAlias"

# Overrides '/usr/bin/w'
w() {
    which $1 || (printf "\n----- Searching Local Aliases/Functions... -----\n" && la $1)
}

# Sleep, then run the last command
ss () {
    tmux send-keys "sleep 1.5 && !-2" "Enter"
}

# Trace through Python program execution (python near-equivalent to 'set -x' in bash)
pyx () {
    target=$(which $1); [[ $target == *"not found" ]] && target=$1
    shift
    python -m trace --ignore-dir $(python -c 'import os, sys; print(os.pathsep.join(sys.path[1:]))') -t $target "$@"
}

# Prints the value of a variable
pvar () { set | grep -i -e "^$1"; }

# Create and CD to New Directory
mkcd() { mkdir -p $1 && cd $1; }


# ------------------------------ EXPORTS ---------------------------------------
# I set this so the crontab would use vim for editing
export EDITOR=$(which vim)

export PROMPT_COMMAND="log_bash_history" 
# Removed to fix double history log # ; $PROMPT_COMMAND"


# ------------------------------ MISC ------------------------------------------
#so as not to be disturbed by Ctrl-S ctrl-Q in terminals:
stty -ixon

if [[ -d $(pwd)/venv ]]; then
	source "venv/bin/activate"
fi

# Fixes Mutt Background Issue (stays transparent) in TMUX
export TERM="screen-256color"

# vim: set filetype=zsh:
