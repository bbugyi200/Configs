priority -50

###########################################################################
#                            SnipMate Snippets                            #
###########################################################################
snippet T "custom T command"
command! -nargs=0 T exec ":e ~/Dropbox/scripts/templates/template.$1"
endsnippet

snippet com "command!"
command! -nargs=0 ${1:Command} ${2:cmd1 | cmd2 | ...}
endsnippet

snippet ch "Get character under cursor"
let ch = matchstr(getline('.'), '\%' . col('.') . 'c.')
endsnippet

snippet col "let c = col('.')"
let c = col('.')
endsnippet

snippet exec "execute"
execute "normal $1"
endsnippet

snippet map "nnoremap"
nnoremap ${1:KEY(S)} ${2:BINDING}
endsnippet

snippet -- "----- Heading -----"
" ----- $1 -----
endsnippet

snippet if "if ... endif"
if $0
	${1:${VISUAL}}
endif
endsnippet

snippet auto "autocmd BufRead,BufNewFile"
autocmd BufRead,BufNewFile $0
endsnippet

snippet plug "Add New Vundle Plugin"
Plugin '$0'
endsnippet

snippet gvar "Global / configuration variable" b
if !exists("g:${1:MyUltraImportantVar}")
	let g:$1 = ${2:"${3:<tab>}"}
endif
endsnippet

snippet guard "script reload guard" b
if exists('${1:did_`!p snip.rv = snip.fn.replace('.','_')`}') || &cp${2: || version < 700}
	finish
endif
let $1 = 1$3
endsnippet

snippet f "function" b
fun ${1:function_name}($2)
	${3:" code}
endf
endsnippet
# vim:ft=snippets:
