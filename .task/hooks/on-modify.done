#!/usr/bin/env python

""" Hooks that Monitor for Task Completions (i.e. 'task done') """

import datetime as dt
import json
import sys

from dates import date_fmt, due_in_N_years, getTodayDT, get_new_wait
from defaults import repeats
from tags import hasTag, isDone

old_task = json.loads(sys.stdin.readline())
new_task = json.loads(sys.stdin.readline())


def isConsistent(task):
    return ('tags' in task.keys()) and ('consistent' in task.keys()) and (task['consistent'] == 'yes')


if isDone(new_task):
    for tag, N in repeats.items():
        if hasTag(new_task, tag):
            due_date = dt.datetime.strptime(new_task['due'], date_fmt)

            todayDT = getTodayDT()
            if not isConsistent(new_task) and (due_date.astimezone(tz=dt.timezone.utc) < todayDT):
                due_date = todayDT

            if any(x in tag for x in ['annual', 'year']):
                new_due = due_in_N_years(N, due_date)
            else:
                new_due = due_date + dt.timedelta(days=N)

            new_task['due'] = new_due.strftime(date_fmt)

            if new_task['delta'] >= 0:
                new_task['wait'] = get_new_wait(new_task)

            new_task['status'] = 'pending'
            new_task.pop('end')

print(json.dumps(new_task))
